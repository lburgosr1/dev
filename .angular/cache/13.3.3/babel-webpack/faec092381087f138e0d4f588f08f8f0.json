{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { map, tap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.baseUrl;\n    }\n\n    verifyAuthentication() {\n      if (!localStorage.getItem('token')) {\n        return of(false);\n      }\n\n      return this.http.get(`${this.baseUrl}/usuarios/1`).pipe(map(auth => {\n        this.user = auth;\n        return true;\n      }));\n    }\n\n    login() {\n      return this.http.get(`${this.baseUrl}/usuarios/1`).pipe(tap(res => {\n        this.user = res;\n      }), tap(res => {\n        localStorage.setItem('token', res.id);\n      }));\n    }\n\n    logout() {\n      this.user = null;\n      localStorage.removeItem('token');\n    }\n\n    get auth() {\n      return this.user;\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}