{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let ValidatorService = /*#__PURE__*/(() => {\n  class ValidatorService {\n    constructor() {\n      this.namePattern = '([a-zA-Z]+) ([a-zA-Z]+)';\n      this.emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\";\n    }\n\n    noPuedeSerStrider(control) {\n      var _a;\n\n      const valor = (_a = control.value) === null || _a === void 0 ? void 0 : _a.trim().toLowerCase();\n\n      if (valor === 'strider') {\n        return {\n          noStrider: true\n        };\n      }\n\n      return null;\n    }\n\n    similarFormFields(field1, field2) {\n      return formGroup => {\n        var _a, _b, _c, _d;\n\n        const pass1 = (_a = formGroup.get(field1)) === null || _a === void 0 ? void 0 : _a.value;\n        const pass2 = (_b = formGroup.get(field2)) === null || _b === void 0 ? void 0 : _b.value;\n\n        if (pass1 !== pass2) {\n          (_c = formGroup.get(field2)) === null || _c === void 0 ? void 0 : _c.setErrors({\n            noEquals: true\n          });\n          return {\n            noEquals: true\n          };\n        } else {\n          (_d = formGroup.get(field2)) === null || _d === void 0 ? void 0 : _d.setErrors({\n            noEquals: false\n          });\n          return {\n            noEquals: false\n          };\n        }\n\n        return null;\n      };\n    }\n\n  }\n\n  ValidatorService.ɵfac = function ValidatorService_Factory(t) {\n    return new (t || ValidatorService)();\n  };\n\n  ValidatorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ValidatorService,\n    factory: ValidatorService.ɵfac,\n    providedIn: 'root'\n  });\n  return ValidatorService;\n})();","map":null,"metadata":{},"sourceType":"module"}