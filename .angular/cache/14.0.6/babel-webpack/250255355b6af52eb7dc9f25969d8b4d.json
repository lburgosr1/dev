{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { switchMap, tap } from 'rxjs';\nimport { CountrieSmall } from '../interfaces/countrie.interface';\nimport * as mapboxgl from 'mapbox-gl';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/countries-service.service\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = [\"map\"];\n\nfunction SelectorPageComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵpipe(1, \"lowercase\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const region_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", i0.ɵɵpipeBind1(1, 2, region_r5));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", region_r5, \" \");\n  }\n}\n\nfunction SelectorPageComponent_div_13_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const countrie_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", countrie_r7.cca3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", countrie_r7.name.common, \" \");\n  }\n}\n\nfunction SelectorPageComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"label\", 4);\n    i0.ɵɵtext(3, \"Paises:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"select\", 17)(5, \"option\", 6);\n    i0.ɵɵtext(6, \"Selecione un pais\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, SelectorPageComponent_div_13_option_7_Template, 2, 2, \"option\", 7);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.countries);\n  }\n}\n\nfunction SelectorPageComponent_div_14_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const border_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", border_r9.name.common);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", border_r9.name.common, \" \");\n  }\n}\n\nfunction SelectorPageComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"label\", 4);\n    i0.ɵɵtext(3, \"Fronteras:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"select\", 18);\n    i0.ɵɵlistener(\"change\", function SelectorPageComponent_div_14_Template_select_change_4_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.selectBorder());\n    });\n    i0.ɵɵelementStart(5, \"option\", 6);\n    i0.ɵɵtext(6, \"Selecione el pais fronterizo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, SelectorPageComponent_div_14_option_7_Template, 2, 2, \"option\", 7);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.borders);\n  }\n}\n\nfunction SelectorPageComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 3)(2, \"div\", 19);\n    i0.ɵɵtext(3, \" Cargando... \");\n    i0.ɵɵelementEnd()()();\n  }\n}\n\nexport let SelectorPageComponent = /*#__PURE__*/(() => {\n  class SelectorPageComponent {\n    constructor(fb, countreisService) {\n      this.fb = fb;\n      this.countreisService = countreisService;\n      this.loading = false;\n      this.lgtLat = [0, 0];\n      this.zoomLevel = 3;\n      this.myForm = this.fb.group({\n        region: ['', Validators.required],\n        countrie: ['', Validators.required],\n        borders: ['', Validators.required]\n      });\n      this.border = new CountrieSmall();\n    }\n\n    ngOnInit() {\n      this.getRegions();\n      this.getCountries();\n      this.getCountriesForBorders();\n    }\n\n    ngAfterViewInit() {\n      this.map = new mapboxgl.Map({\n        container: this.divMap.nativeElement,\n        style: 'mapbox://styles/mapbox/streets-v11',\n        center: [this.border.latlng[1], this.border.latlng[0]],\n        zoom: this.zoomLevel // starting zoom\n        //projection: 'globe' // display the map as a 3D globe\n\n      });\n      this.map.on('style.load', () => {\n        this.map.setFog({}); // Set the default atmosphere style\n      });\n      this.map.flyTo({\n        center: [this.border.latlng[1], this.border.latlng[0]],\n        duration: 7000,\n        essential: true\n      });\n      new mapboxgl.Marker().setLngLat([this.border.latlng[1], this.border.latlng[0]]).addTo(this.map);\n    }\n\n    getRegions() {\n      this.regions = this.countreisService.regions;\n    }\n\n    getCountries() {\n      var _a;\n\n      (_a = this.myForm.get('region')) === null || _a === void 0 ? void 0 : _a.valueChanges.pipe(tap(_ => {\n        var _a;\n\n        (_a = this.myForm.get('countrie')) === null || _a === void 0 ? void 0 : _a.reset('');\n        this.loading = true;\n      }), switchMap(region => this.countreisService.getCountriesForRegion(region))).subscribe(countries => {\n        this.countries = countries;\n        this.loading = false;\n      });\n      /* this.myForm.get('region')?.valueChanges.subscribe({\r\n        next: (region) => {\r\n          this.countreisService.getCountriesForRegion(region).subscribe({\r\n            next: (res) => {\r\n              this.countries = res;\r\n            }\r\n          })\r\n        },\r\n        error: () => {\r\n              }\r\n      }); */\n    }\n\n    getCountriesForBorders() {\n      var _a;\n\n      (_a = this.myForm.get('countrie')) === null || _a === void 0 ? void 0 : _a.valueChanges.pipe(tap(() => {\n        this.loading = true;\n        this.myForm.get('borders').reset('');\n      }), switchMap(code => this.countreisService.getCountriesForCode(code)), switchMap(countrie => {\n        var _a;\n\n        return this.countreisService.getCountriesBorders((_a = countrie[0]) === null || _a === void 0 ? void 0 : _a.borders);\n      })).subscribe(countries => {\n        //this.borders = countrie[0]?.borders;\n        this.borders = countries;\n        this.loading = false;\n      });\n    }\n\n    setBorder() {\n      return this.borders.find(b => b.name.common === this.myForm.get('borders').value);\n    }\n\n    selectBorder() {\n      this.border = this.setBorder();\n      console.log(this.zoomLevel);\n\n      if (this.border) {\n        this.map = new mapboxgl.Map({\n          container: this.divMap.nativeElement,\n          style: 'mapbox://styles/mapbox/streets-v11',\n          center: [this.border.latlng[1], this.border.latlng[0]],\n          zoom: this.zoomLevel // starting zoom\n          //projection: 'globe' // display the map as a 3D globe\n\n        });\n        this.map.on('style.load', () => {\n          this.map.setFog({}); // Set the default atmosphere style\n        });\n        this.map.flyTo({\n          center: [this.border.latlng[1], this.border.latlng[0]],\n          duration: 7000,\n          essential: true\n        });\n        new mapboxgl.Marker().setLngLat([this.border.latlng[1], this.border.latlng[0]]).addTo(this.map);\n      }\n    }\n\n  }\n\n  SelectorPageComponent.ɵfac = function SelectorPageComponent_Factory(t) {\n    return new (t || SelectorPageComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CountriesService));\n  };\n\n  SelectorPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SelectorPageComponent,\n    selectors: [[\"app-selector-page\"]],\n    viewQuery: function SelectorPageComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.divMap = _t.first);\n      }\n    },\n    decls: 26,\n    vars: 5,\n    consts: [[1, \"row\"], [1, \"col-md-6\", 3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-3\"], [1, \"col\"], [1, \"form-label\"], [\"formControlName\", \"region\", 1, \"form-select\"], [\"value\", \"\", \"selected\", \"\", \"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"row mb-3\", 4, \"ngIf\"], [\"class\", \"row\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"float-end\"], [1, \"col-md-6\", \"container\"], [1, \"col-12\", \"mt-2\"], [1, \"card\"], [1, \"map\"], [\"map\", \"\"], [3, \"value\"], [\"formControlName\", \"countrie\", 1, \"form-select\"], [\"formControlName\", \"borders\", 1, \"form-select\", 3, \"change\"], [1, \"alert\", \"alert-primary\"]],\n    template: function SelectorPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h5\");\n        i0.ɵɵtext(1, \"Paises\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"hr\");\n        i0.ɵɵelementStart(3, \"div\", 0)(4, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function SelectorPageComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.selectBorder();\n        });\n        i0.ɵɵelementStart(5, \"div\", 2)(6, \"div\", 3)(7, \"label\", 4);\n        i0.ɵɵtext(8, \"Region:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"select\", 5)(10, \"option\", 6);\n        i0.ɵɵtext(11, \"Seleccione una region\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, SelectorPageComponent_option_12_Template, 3, 4, \"option\", 7);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(13, SelectorPageComponent_div_13_Template, 8, 1, \"div\", 8);\n        i0.ɵɵtemplate(14, SelectorPageComponent_div_14_Template, 8, 1, \"div\", 8);\n        i0.ɵɵtemplate(15, SelectorPageComponent_div_15_Template, 4, 0, \"div\", 9);\n        i0.ɵɵelementStart(16, \"div\", 0)(17, \"div\", 3)(18, \"button\", 10);\n        i0.ɵɵtext(19, \" Seleccionar \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(20, \"div\", 11)(21, \"div\", 0)(22, \"div\", 12)(23, \"div\", 13);\n        i0.ɵɵelement(24, \"div\", 14, 15);\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.regions);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.countries && ctx.countries.length !== 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.borders && ctx.borders.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.LowerCasePipe],\n    styles: [\".card[_ngcontent-%COMP%]{height:350px}.map[_ngcontent-%COMP%]{width:100%;height:350px;margin:0}\"]\n  });\n  return SelectorPageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}