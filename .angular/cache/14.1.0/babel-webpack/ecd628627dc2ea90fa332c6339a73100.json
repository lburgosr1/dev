{"ast":null,"code":"import * as mapboxgl from 'mapbox-gl'; // or \"const mapboxgl = require('mapbox-gl');\"\n\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = [\"map\"];\n\nfunction MarkersComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 5);\n    i0.ɵɵlistener(\"click\", function MarkersComponent_li_3_Template_li_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.goToMarker());\n    });\n    i0.ɵɵtext(1, \" marker \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let MarkersComponent = /*#__PURE__*/(() => {\n  class MarkersComponent {\n    constructor() {\n      this.zoomLevel = 12;\n      this.center = [-69.94680196984339, 18.489202466590267];\n      this.markers = new Array();\n    }\n\n    ngAfterViewInit() {\n      this.map = new mapboxgl.Map({\n        container: this.divMap.nativeElement,\n        style: 'mapbox://styles/examples/cjgiiz9ck002j2ss5zur1vjji',\n        center: this.center,\n        zoom: this.zoomLevel // starting zoom\n        //projection: 'globe' // display the map as a 3D globe\n\n      });\n      this.map.on('style.load', () => {\n        this.map.setFog({}); // Set the default atmosphere style\n      });\n      /* const markerHtml: HTMLElement = document.createElement('div');\r\n      markerHtml.innerHTML = 'Hello' */\n      //const marker = new mapboxgl.Marker();\n\n      /* new mapboxgl.Marker({\r\n        element: markerHtml\r\n      }).setLngLat(this.center).addTo(this.map); */\n    }\n\n    addMarker() {\n      const color = \"#xxxxxx\".replace(/x/g, y => (Math.random() * 16 | 0).toString(16));\n      const newMarker = new mapboxgl.Marker({\n        draggable: true,\n        color: color\n      }).setLngLat(this.center).addTo(this.map);\n      this.markers.push(newMarker);\n    }\n\n    goToMarker() {}\n\n  }\n\n  MarkersComponent.ɵfac = function MarkersComponent_Factory(t) {\n    return new (t || MarkersComponent)();\n  };\n\n  MarkersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MarkersComponent,\n    selectors: [[\"app-markers\"]],\n    viewQuery: function MarkersComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.divMap = _t.first);\n      }\n    },\n    decls: 6,\n    vars: 1,\n    consts: [[1, \"list-group\"], [1, \"list-group-item\", \"list-group-item-dark\", 3, \"click\"], [\"class\", \"list-group-item\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mapa-container\"], [\"map\", \"\"], [1, \"list-group-item\", 3, \"click\"]],\n    template: function MarkersComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ul\", 0)(1, \"li\", 1);\n        i0.ɵɵlistener(\"click\", function MarkersComponent_Template_li_click_1_listener() {\n          return ctx.addMarker();\n        });\n        i0.ɵɵtext(2, \" + Agregar \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, MarkersComponent_li_3_Template, 2, 0, \"li\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"div\", 3, 4);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.markers);\n      }\n    },\n    dependencies: [i1.NgForOf],\n    styles: [\".mapa-container[_ngcontent-%COMP%]{width:100%;height:100%}.list-group[_ngcontent-%COMP%]{position:fixed;top:65px;left:10px;z-index:999;cursor:pointer}\"]\n  });\n  return MarkersComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}