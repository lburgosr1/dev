{"ast":null,"code":"import { BaseChartDirective } from 'ng2-charts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ng2-charts\";\nexport let BarChartComponent = /*#__PURE__*/(() => {\n  class BarChartComponent {\n    constructor() {\n      this.barChartOptions = {\n        responsive: true,\n        // We use these empty structures as placeholders for dynamic theming.\n        scales: {\n          x: {},\n          y: {\n            min: 10\n          }\n        },\n        plugins: {\n          legend: {\n            display: true\n          }\n        }\n      };\n      this.barChartType = 'bar';\n      this.barChartLegend = true;\n      this.barChartData = {\n        labels: ['2006', '2007', '2008', '2009', '2010', '2011', '2012'],\n        datasets: [{\n          data: [65, 59, 80, 81, 56, 55, 40],\n          label: 'Series A',\n          backgroundColor: '#90F54B',\n          hoverBackgroundColor: '#2C83F2'\n        }, {\n          data: [28, 48, 40, 19, 86, 27, 90],\n          label: 'Series B',\n          backgroundColor: '#FCC72D',\n          hoverBackgroundColor: '#2C83F2'\n        }, {\n          data: [45, 50, 15, 82, 96, 17, 70],\n          label: 'Series C',\n          backgroundColor: '#E65535',\n          hoverBackgroundColor: '#2C83F2'\n        }]\n      };\n    } // events\n\n\n    chartClicked({\n      event,\n      active\n    }) {\n      console.log(event, active);\n    }\n\n    chartHovered({\n      event,\n      active\n    }) {\n      console.log(event, active);\n    }\n\n    randomize() {\n      var _a; // Only Change 3 values\n\n\n      this.barChartData.datasets[0].data = [Math.round(Math.random() * 100), 59, 80, Math.round(Math.random() * 100), 56, Math.round(Math.random() * 100), 40];\n      (_a = this.chart) === null || _a === void 0 ? void 0 : _a.update();\n    }\n\n  }\n\n  BarChartComponent.ɵfac = function BarChartComponent_Factory(t) {\n    return new (t || BarChartComponent)();\n  };\n\n  BarChartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BarChartComponent,\n    selectors: [[\"app-bar-chart\"]],\n    viewQuery: function BarChartComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(BaseChartDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chart = _t.first);\n      }\n    },\n    decls: 9,\n    vars: 3,\n    consts: [[1, \"primary\"], [1, \"row\"], [1, \"col\"], [2, \"display\", \"block\"], [\"baseChart\", \"\", 3, \"data\", \"options\", \"type\", \"chartHover\", \"chartClick\"], [1, \"btn\", \"float-end\", 3, \"click\"]],\n    template: function BarChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\", 0);\n        i0.ɵɵtext(1, \"Graficas de Barras\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"hr\");\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3)(6, \"canvas\", 4);\n        i0.ɵɵlistener(\"chartHover\", function BarChartComponent_Template_canvas_chartHover_6_listener($event) {\n          return ctx.chartHovered($event);\n        })(\"chartClick\", function BarChartComponent_Template_canvas_chartClick_6_listener($event) {\n          return ctx.chartClicked($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function BarChartComponent_Template_button_click_7_listener() {\n          return ctx.randomize();\n        });\n        i0.ɵɵtext(8, \"Update\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"data\", ctx.barChartData)(\"options\", ctx.barChartOptions)(\"type\", ctx.barChartType);\n      }\n    },\n    dependencies: [i1.BaseChartDirective],\n    styles: [\".btn[_ngcontent-%COMP%]{color:#fff;background-color:tomato;border-radius:5px;font-weight:600}.btn[_ngcontent-%COMP%]:hover{background-color:#fa5e10;border:1px solid #fff;box-shadow:0 0 5px #fa5e10}\"]\n  });\n  return BarChartComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}